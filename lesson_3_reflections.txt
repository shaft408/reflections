When would you want to use a remote repository rather than keeping all your work local?
when you are ready to share your code with the world.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Pulling changes manually gives you ultimate flexibility. For example you are working on a project with other team members
you don't want to pull in breaking changes. You want to pull in when you feel everything is right.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
I can branch my own personal repository from Master branch
I can cone someones repository from git hub and make changes and push those changes back to the repository I cloned from
Fork is git gubs version of clone. It happens on git hub, changes made in a forked repository cannot be pushed back to where the repository was forked from.

What is the benefit of having a copy of the last known state of the remote stored locally?
I believe it makes merging up to git hub easier because you will be able to have a working copy of what's on git hub and work to resolve the conflicts localy
before pushing up to git hub

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
One can email files back and forth. It would be a lot harder to track and merge changes I believe
Git and GitHub simplify the process and everything is tracked.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
If you have breaking code that you want to test and have others evaluate prior to merging to the master branch, then creating
your own branch which you can then request a pull into master for makes perfect sense.
Benefits of pushing and pulling directly into master is that it's faster.
Benefits of pushing and pulling and requesting pull's into master is that it makes it safer to colaborate and test new code with others.